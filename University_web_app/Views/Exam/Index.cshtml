@{
    ViewData["Title"] = "University Exam";
}



@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Warning"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show mt-3" role="alert">
        @TempData["Warning"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Program Dropdown -->
<select id="programSelect" class="form-select" onchange="onProgramChange()">
    <option value="">-- Select Program --</option>
    @foreach (var program in ViewData["Programs"] as List<ProgramUniv>)
    {
        <option value="@program.Id">@program.Name</option>
    }
</select>

<!-- Level Dropdown -->
<select id="levelSelect" class="form-select mt-2" onchange="onLevelChange()">
    <option value="">-- Select Level --</option>
</select>


<select id="subjectSelect" class="form-select mt-2" onchange="onSubjectChange()">
    <option value="">-- Select Subject --</option>
</select>

<div class="mt-4 p-3 border rounded shadow-sm bg-light">
    <h5><i class="bi bi-upload me-2"></i>Import Exams from CSV</h5>
    <form action="/Exam/ImportCsv" method="post" enctype="multipart/form-data" class="mt-3">
        <div class="mb-3">
            <label for="csvFile" class="form-label">Choose a CSV file:</label>
            <input type="file" id="csvFile" name="csvFile" accept=".csv" class="form-control" />
        </div>
        <button type="submit" class="btn btn-success">
            <i class="bi bi-cloud-arrow-up me-1"></i>Upload CSV
        </button>
    </form>
</div>

<h4>Exams</h4>
<table id="examsTable" class="table">
    <thead>
        <tr>
            <th>Student Cin </th>
            <th>FirstName </th>
            <th>LastName </th>
            
            <th>Midterm (DS)</th>
            <th>Final Exam</th>
            <th>Email </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        <!-- Exam rows will be populated dynamically -->
    </tbody>
</table>



@section Scripts {
    <script>
        // Function to handle Program Change
        async function onProgramChange() {
            const programId = document.getElementById('programSelect').value;
            const levelSelect = document.getElementById('levelSelect');
            const subjectSelect = document.getElementById('subjectSelect');
            if (programId) {
                // Get levels by program
                const response = await fetch(`/Exam/GetLevelsByProgram?programId=${programId}`);
                const levels = await response.json();

                // Update the Level dropdown
                levelSelect.innerHTML = '<option value="">-- Select Level --</option>';
                levels.forEach(level => {
                    const option = document.createElement('option');
                    option.value = level.id;
                    option.text = level.name;
                    levelSelect.appendChild(option);
                });

                // Clear the subject dropdown when program changes
                subjectSelect.innerHTML = '<option value="">-- Select Subject --</option>';
            } else {
                levelSelect.innerHTML = '<option value="">-- Select Level --</option>';
                subjectSelect.innerHTML = '<option value="">-- Select Subject --</option>';
            }
        }

        // Function to handle Level Change
        async function onLevelChange() {
            const levelId = document.getElementById('levelSelect').value;
            const subjectSelect = document.getElementById('subjectSelect');
            if (levelId) {
                // Get subjects by level
                const response = await fetch(`/Exam/GetSubjectsByLevel?levelId=${levelId}`);
                const subjects = await response.json();

                // Update the Subject dropdown
                subjectSelect.innerHTML = '<option value="">-- Select Subject --</option>';
                subjects.forEach(subject => {
                    const option = document.createElement('option');
                    option.value = subject.id;
                    option.text = subject.name;
                    subjectSelect.appendChild(option);
                });
            } else {
                subjectSelect.innerHTML = '<option value="">-- Select Subject --</option>';
            }
        }


                async function onSubjectChange() {
            const subjectId = document.getElementById('subjectSelect').value;
            const examsTableBody = document.getElementById('examsTable').getElementsByTagName('tbody')[0];

            if (subjectId) {
                const response = await fetch(`/Exam/GetExamsBySubject?subjectId=${subjectId}`);
                const exams = await response.json();
                console.log(exams);

                // Clear the current rows in the table
                examsTableBody.innerHTML = '';

                // Populate the exams table with the fetched data
                exams.forEach(exam => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${exam.student.cinId}</td>
                        <td>${exam.student.firstName}</td>
                        <td>${exam.student.lastName}</td>
                        

                        <td>${exam.ds !== null ? exam.ds : 'N/A'}</td>
                        <td>${exam.finalExam !== null ? exam.finalExam : 'N/A'}</td>
                        <td>${exam.student.email}</td>
                  <td>
            <form action="/Exam/SendEmail" method="post">
                <input type="hidden" name="Id" value="${exam.student.id}" />
                <input type="hidden" name="Subject" value="${exam.subject.name}" />
                <input type="hidden" name="ds" value="${exam.ds}" />
                <input type="hidden" name="finalExam" value="${exam.finalExam}" />

                <button type="submit" class="btn btn-sm btn-outline-primary">Send Email</button>
            </form>
        </td>

        </td>
                    `;                    

                    examsTableBody.appendChild(row);
                });
            } else {
                examsTableBody.innerHTML = '';
            }
        }

    </script>
}
