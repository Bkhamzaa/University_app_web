@{
    ViewData["Title"] = "University subject";
}

<h3>@ViewData["Title"]</h3>
<div id="response" class="mt-2 text-success"></div>

<!-- Program Dropdown -->
<select id="programSelect" class="form-select" onchange="onProgramChange()">
    <option value="">-- Select Program --</option>
    @foreach (var program in ViewData["Programs"] as List<ProgramUniv>)
    {
        <option value="@program.Id">@program.Name</option>
    }
</select>

<!-- Level Dropdown -->
<select id="levelSelect" class="form-select mt-2" onchange="onLevelChange()">
    <option value="">-- Select Level --</option>
</select>

<!-- Add Subject Button -->
<button type="button" class="btn btn-primary mt-3" id="openSubjectModal">
    Add Subject
</button>

<input type="text" id="searchTerm" class="form-control mt-2" placeholder="Search subjects " onkeyup="searchSubjects()" />

<!-- Validation Message -->
<div id="validationMessage" class="text-danger mt-2"></div>

<!-- Subject List -->
<!-- Subject Table -->
<table class="table table-bordered mt-3">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Coefficient</th>
            <th>Semester</th>
            <th>ID</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="subjectList"></tbody>
</table>

<div class="modal fade" id="SubjectModal" tabindex="-1" aria-labelledby="SubjectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="SubjectModalLabel">Add Subject</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form method="post" asp-action="AddSubject" id="AddSubject">
                <div class="modal-body">
                    <input type="text" id="name" name="name" class="form-control mt-2" placeholder=" Name" />
                    <input type="number" id="Coefficient" name="Coefficient" class="form-control mt-2" placeholder="Coefficient" />
                    <input type="text" id="Semester" name="Semester" class="form-control mt-2" placeholder="Semester" />
                    <input type="hidden" id="levelId" name="levelId" />
                </div>
                <div id="response_error" class="mt-2 text-success"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>

@section Scripts {
    <script>
        async function onProgramChange() {
            const programId = document.getElementById('programSelect').value;
            const levelSelect = document.getElementById('levelSelect');

            levelSelect.innerHTML = '<option value="">-- Select Level --</option>';

            if (programId) {
                const response = await fetch(`/subject/GetLevelsByProgram?programId=${programId}`);
                const levels = await response.json();

                levels.forEach(level => {
                    const option = document.createElement('option');
                    option.value = level.id;
                    option.textContent = level.name;
                    levelSelect.appendChild(option);
                });
            }
        }

        async function onLevelChange() {
            const levelId = document.getElementById('levelSelect').value;
            const subjectList = document.getElementById('subjectList');
            subjectList.innerHTML = '';

            if (levelId) {
                const response = await fetch(`/Subject/GetSubjectsByLevel?levelId=${levelId}`);
                const subjects = await response.json();

                subjects.forEach(subject => {
                             const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${subject.name}</td>
                <td>${subject.coefficient}</td>
                <td>${subject.semester}</td>
                <td>${subject.id}</td>
                <td>
                            <a class="btn btn-sm btn-warning me-2" href="/subject/Updatesubject/${subject.id}">
                                Update
                            </a>
            <button class="btn btn-sm btn-danger"
                           id="deletesubject"
                       data-id=${subject.id}>
                       Delete
                   </button>                                
                           
                             </td>
                    `;
                    subjectList.appendChild(tr);
                });
            }
        }

        document.getElementById('openSubjectModal').addEventListener('click', function () {
              const programId = document.getElementById('programSelect').value;
              const levelId = document.getElementById('levelSelect').value;
              const validationMsg = document.getElementById('validationMessage');

              if (!programId || !levelId) {
                  validationMsg.innerText = 'Please select both Program and Level before adding a Subject.';
                  setTimeout(() => validationMsg.innerText = '', 4000);
              } else {
                  validationMsg.innerText = '';
                  const modal = new bootstrap.Modal(document.getElementById('SubjectModal'));
                  modal.show();
              }
          });




            document.getElementById('AddSubject').addEventListener('submit', function (e) {
            e.preventDefault();

            const levelId = document.getElementById('levelSelect').value;

            document.getElementById('levelId').value = levelId;

            const formData = new FormData(this);
            const responseEl = document.getElementById('response');
            const responseEl2 = document.getElementById('response_error');

            fetch('/Subject/AddSubject', {
                method: 'POST',
                body: formData
            })
            .then(async response => {
                const text = await response.text();
                if (!response.ok) throw new Error(text);

                responseEl.innerHTML = 'Form submitted successfully!';
                responseEl.classList.remove('text-danger');
                responseEl.classList.add('text-success');

                const modalElement = document.getElementById('SubjectModal');
                const modalInstance = bootstrap.Modal.getInstance(modalElement);
                modalInstance.hide();

                document.getElementById('AddSubject').reset();
                onLevelChange();

                setTimeout(() => {
                    responseEl.innerHTML = '';
                }, 4000);
            })
            .catch(error => {
                console.error('Error:', error.message);
                responseEl2.innerHTML = error.message || 'Something went wrong.';
                responseEl2.classList.remove('text-success');
                responseEl2.classList.add('text-danger');

                setTimeout(() => {
                    responseEl2.innerHTML = '';
                }, 4000);
            });
        });


                document.getElementById('subjectList').addEventListener('click', function (e) {
                            if (e.target && e.target.id === 'deletesubject') {
                    const subjectId = e.target.getAttribute('data-id'); 

                    // Ask for confirmation
                    const confirmDelete = confirm("Are you sure you want to delete this Subject?");
                    if (confirmDelete) {
                                      deletesubject(subjectId);
                    }
                }
            });


                            async function searchSubjects() {
                const searchTerm = document.getElementById('searchTerm').value;
                const levelId = document.getElementById('levelSelect').value;
                const subjectList = document.getElementById('subjectList');
                subjectList.innerHTML = '';

                if (!levelId) {
                    document.getElementById('validationMessage').innerText = 'Please select a level before searching.';
                    return;
                }

                if (searchTerm.length >= 1) {
                    const response = await fetch(`/Subject/SearchSubjects?term=${searchTerm}&levelId=${levelId}`);
                    const subjects = await response.json();

                    subjects.forEach(subject => {
                                 const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${subject.name}</td>
                <td>${subject.coefficient}</td>
                <td>${subject.semester}</td>
                <td>${subject.id}</td>
                <td>
                                <a class="btn btn-sm btn-warning me-2" href="/subject/UpdateSubject/${subject.id}">Update</a>
            <button class="btn btn-sm btn-danger"
                           id="deletesubject"
                       data-id=${subject.id}>
                       Delete
                       </button>                              </td>
                        `;
                        subjectList.appendChild(tr);
                    });
                }else{
                        onLevelChange()
                }
            }

                                   function deletesubject(subjectId) {
                            fetch(`/Subject/DeleteSubject?id=${subjectId}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(data => {
                    alert(data.message || "subject deleted successfully.");
                    onLevelChange();  // Reload subject list after deletion
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("Something went wrong. Please try again.");
                });
            }

    </script>
}
