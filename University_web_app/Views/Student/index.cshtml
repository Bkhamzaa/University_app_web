@{
    ViewData["Title"] = "University Student";
}

<div id="response" class="mt-2 text-success"></div>

<!-- Program Dropdown -->
<select id="programSelect" class="form-select" onchange="onProgramChange()">
    <option value="">-- Select Program --</option>
    @foreach (var program in ViewData["Programs"] as List<ProgramUniv>)
    {
        <option value="@program.Id">@program.Name</option>
    }
</select>

<!-- Level Dropdown -->
<select id="levelSelect" class="form-select mt-2" onchange="onLevelChange()">
    <option value="">-- Select Level --</option>
</select>

<!-- Add Student Button -->
<button type="button" class="btn btn-primary mt-3" id="openStudentModal">
    Add Student
</button>
<div id="validationMessage" class="text-danger mt-2"></div>

<!-- Student List -->
<!-- Subject Table -->
<table class="table table-bordered mt-3">
    <thead class="table-light">
        <tr>
            <th>CIN</th>

            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Action</th>
            
        </tr>
    </thead>
    <tbody id="studentList"></tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studentModalLabel">Add Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form method="post" asp-action="AddStudent" id="AddStudent">
                <div class="modal-body">
                    <input type="text" id="firstName" name="FirstName" class="form-control mt-2" placeholder="First Name" />
                    <input type="text" id="lastName" name="LastName" class="form-control mt-2" placeholder="Last Name" />
                    <input type="email" id="email" name="Email" class="form-control mt-2" placeholder="Email" />
                    <input type="text" id="CinId" name="CinId" class="form-control mt-2" placeholder="CinId" />
                    <input type="hidden" id="programId" name="programId" />
                    <input type="hidden" id="levelId" name="levelId" />
                </div>
                <div id="response_error" class="mt-2 text-success"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
           
        async function onProgramChange() {
            const programId = document.getElementById('programSelect').value;
            const levelSelect = document.getElementById('levelSelect');
            if (programId) {
                const response = await fetch(`/Student/GetLevelsByProgram?programId=${programId}`);
                const levels = await response.json();

                levelSelect.innerHTML = '<option value="">-- Select Level --</option>';
                levels.forEach(level => {
                    const option = document.createElement('option');
                    option.value = level.id;
                    option.text = level.name;
                    levelSelect.appendChild(option);
                });
            }
        }

        async function onLevelChange() {
            const levelId = document.getElementById('levelSelect').value;
            const studentList = document.getElementById('studentList');
            if (levelId) {
                const response = await fetch(`/Student/GetStudentsByLevel?levelId=${levelId}`);
                const students = await response.json();
    



                        studentList.innerHTML = '';
                students.forEach(student => {
                    console.log(student)
                           const tr = document.createElement('tr');
        tr.innerHTML = `
            <td>${student.cinId}</td>
            <td>${student.firstName}</td>
            <td>${student.lastName}</td>
            <td>${student.email}</td>
            <td>
               <a class="btn btn-sm btn-warning me-2"
               href="/Student/UpdateStudent/${student.id}">
               Update
            </a>
           
           <button class="btn btn-sm btn-danger"
            id="deleteStudent"
            data-id=${student.id}>
            Delete
        </button>                           </td>

                    `;
                    studentList.appendChild(tr);
                });
            }
        }

        // Validate before opening modal
        document.getElementById('openStudentModal').addEventListener('click', function () {
            const programId = document.getElementById('programSelect').value;
            const levelId = document.getElementById('levelSelect').value;
            const validationMsg = document.getElementById('validationMessage');

            if (!programId || !levelId) {
                validationMsg.innerText = 'Please select both Program and Level before adding a student.';
                setTimeout(() => validationMsg.innerText = '', 4000);
            } else {
                validationMsg.innerText = '';
                const modal = new bootstrap.Modal(document.getElementById('studentModal'));
                modal.show();
            }
        });

        // Submit student form
        document.getElementById('AddStudent').addEventListener('submit', function (e) {
            e.preventDefault();

            const programId = document.getElementById('programSelect').value;
            const levelId = document.getElementById('levelSelect').value;

            document.getElementById('programId').value = programId;
            document.getElementById('levelId').value = levelId;

            const formData = new FormData(this);
            const responseEl = document.getElementById('response');
            const responseEl2 = document.getElementById('response_error');

            fetch('/Student/AddStudent', {
                method: 'POST',
                body: formData
            })
            .then(async response => {
                const text = await response.text();
                if (!response.ok) throw new Error(text);

                responseEl.innerHTML = 'Form submitted successfully!';
                responseEl.classList.remove('text-danger');
                responseEl.classList.add('text-success');

                const modalElement = document.getElementById('studentModal');
                const modalInstance = bootstrap.Modal.getInstance(modalElement);
                modalInstance.hide();

                document.getElementById('AddStudent').reset();
                onLevelChange();

                setTimeout(() => {
                    responseEl.innerHTML = '';
                }, 4000);
            })
            .catch(error => {
                console.error('Error:', error.message);
                responseEl2.innerHTML = error.message || 'Something went wrong.';
                responseEl2.classList.remove('text-success');
                responseEl2.classList.add('text-danger');

                setTimeout(() => {
                    responseEl2.innerHTML = '';
                }, 4000);
            });
        });

          document.getElementById('studentList').addEventListener('click', function (e) {
            if (e.target && e.target.id === 'deleteStudent') {
                const studentId = e.target.getAttribute('data-id'); // Get the student ID

                // Ask for confirmation
                const confirmDelete = confirm("Are you sure you want to delete this student?");
                if (confirmDelete) {
                    // Call your delete API or method
                    deleteStudent(studentId);
                }
            }
        });

        function deleteStudent(studentId) {
            fetch(`/Student/DeleteStudent?id=${studentId}`, {
                method: 'DELETE',
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message || "Student deleted successfully.");
                onLevelChange();  // Reload student list after deletion
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Something went wrong. Please try again.");
            });
        }

    </script>



}
